// Code generated by MockGen. DO NOT EDIT.
// Source: main/internal/socket_token (interfaces: TokeUseCase)

// Package mock_socket_token is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTokeUseCase is a mock of TokeUseCase interface
type MockTokeUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockTokeUseCaseMockRecorder
}

// MockTokeUseCaseMockRecorder is the mock recorder for MockTokeUseCase
type MockTokeUseCaseMockRecorder struct {
	mock *MockTokeUseCase
}

// NewMockTokeUseCase creates a new mock instance
func NewMockTokeUseCase(ctrl *gomock.Controller) *MockTokeUseCase {
	mock := &MockTokeUseCase{ctrl: ctrl}
	mock.recorder = &MockTokeUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokeUseCase) EXPECT() *MockTokeUseCaseMockRecorder {
	return m.recorder
}

// CreateNewToken mocks base method
func (m *MockTokeUseCase) CreateNewToken(arg0 int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewToken", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewToken indicates an expected call of CreateNewToken
func (mr *MockTokeUseCaseMockRecorder) CreateNewToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewToken", reflect.TypeOf((*MockTokeUseCase)(nil).CreateNewToken), arg0)
}
