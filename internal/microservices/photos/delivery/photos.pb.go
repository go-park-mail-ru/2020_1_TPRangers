// Code generated by protoc-gen-go. DO NOT EDIT.
// source: photos.proto

package photos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AlbumId struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlbumId) Reset()         { *m = AlbumId{} }
func (m *AlbumId) String() string { return proto.CompactTextString(m) }
func (*AlbumId) ProtoMessage()    {}
func (*AlbumId) Descriptor() ([]byte, []int) {
	return fileDescriptor_81c4daeb186b1364, []int{0}
}

func (m *AlbumId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumId.Unmarshal(m, b)
}
func (m *AlbumId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumId.Marshal(b, m, deterministic)
}
func (m *AlbumId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumId.Merge(m, src)
}
func (m *AlbumId) XXX_Size() int {
	return xxx_messageInfo_AlbumId.Size(m)
}
func (m *AlbumId) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumId.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumId proto.InternalMessageInfo

func (m *AlbumId) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Photos struct {
	AlbumName            string   `protobuf:"bytes,1,opt,name=AlbumName,proto3" json:"AlbumName,omitempty"`
	Urls                 []string `protobuf:"bytes,2,rep,name=Urls,proto3" json:"Urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Photos) Reset()         { *m = Photos{} }
func (m *Photos) String() string { return proto.CompactTextString(m) }
func (*Photos) ProtoMessage()    {}
func (*Photos) Descriptor() ([]byte, []int) {
	return fileDescriptor_81c4daeb186b1364, []int{1}
}

func (m *Photos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Photos.Unmarshal(m, b)
}
func (m *Photos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Photos.Marshal(b, m, deterministic)
}
func (m *Photos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Photos.Merge(m, src)
}
func (m *Photos) XXX_Size() int {
	return xxx_messageInfo_Photos.Size(m)
}
func (m *Photos) XXX_DiscardUnknown() {
	xxx_messageInfo_Photos.DiscardUnknown(m)
}

var xxx_messageInfo_Photos proto.InternalMessageInfo

func (m *Photos) GetAlbumName() string {
	if m != nil {
		return m.AlbumName
	}
	return ""
}

func (m *Photos) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

type PhotoInAlbum struct {
	Url                  string   `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`
	AlbumID              string   `protobuf:"bytes,2,opt,name=AlbumID,proto3" json:"AlbumID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhotoInAlbum) Reset()         { *m = PhotoInAlbum{} }
func (m *PhotoInAlbum) String() string { return proto.CompactTextString(m) }
func (*PhotoInAlbum) ProtoMessage()    {}
func (*PhotoInAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_81c4daeb186b1364, []int{2}
}

func (m *PhotoInAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhotoInAlbum.Unmarshal(m, b)
}
func (m *PhotoInAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhotoInAlbum.Marshal(b, m, deterministic)
}
func (m *PhotoInAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoInAlbum.Merge(m, src)
}
func (m *PhotoInAlbum) XXX_Size() int {
	return xxx_messageInfo_PhotoInAlbum.Size(m)
}
func (m *PhotoInAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoInAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoInAlbum proto.InternalMessageInfo

func (m *PhotoInAlbum) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PhotoInAlbum) GetAlbumID() string {
	if m != nil {
		return m.AlbumID
	}
	return ""
}

type Dummy struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dummy) Reset()         { *m = Dummy{} }
func (m *Dummy) String() string { return proto.CompactTextString(m) }
func (*Dummy) ProtoMessage()    {}
func (*Dummy) Descriptor() ([]byte, []int) {
	return fileDescriptor_81c4daeb186b1364, []int{3}
}

func (m *Dummy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dummy.Unmarshal(m, b)
}
func (m *Dummy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dummy.Marshal(b, m, deterministic)
}
func (m *Dummy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dummy.Merge(m, src)
}
func (m *Dummy) XXX_Size() int {
	return xxx_messageInfo_Dummy.Size(m)
}
func (m *Dummy) XXX_DiscardUnknown() {
	xxx_messageInfo_Dummy.DiscardUnknown(m)
}

var xxx_messageInfo_Dummy proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AlbumId)(nil), "photos.AlbumId")
	proto.RegisterType((*Photos)(nil), "photos.Photos")
	proto.RegisterType((*PhotoInAlbum)(nil), "photos.PhotoInAlbum")
	proto.RegisterType((*Dummy)(nil), "photos.Dummy")
}

func init() { proto.RegisterFile("photos.proto", fileDescriptor_81c4daeb186b1364) }

var fileDescriptor_81c4daeb186b1364 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xc8, 0xc8, 0x2f,
	0xc9, 0x2f, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x24, 0xb9, 0xd8,
	0x1d, 0x73, 0x92, 0x4a, 0x73, 0x3d, 0x53, 0x84, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x58, 0x83, 0x98, 0x32, 0x53, 0x94, 0xac, 0xb8, 0xd8, 0x02, 0xc0, 0x8a, 0x84, 0x64,
	0xb8, 0x38, 0xc1, 0x8a, 0xfc, 0x12, 0x73, 0x53, 0xc1, 0x0a, 0x38, 0x83, 0x10, 0x02, 0x42, 0x42,
	0x5c, 0x2c, 0xa1, 0x45, 0x39, 0xc5, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92,
	0x15, 0x17, 0x0f, 0x58, 0xaf, 0x67, 0x1e, 0x58, 0x9d, 0x90, 0x00, 0x17, 0x73, 0x68, 0x51, 0x0e,
	0x54, 0x2f, 0x88, 0x29, 0x24, 0x01, 0xb3, 0xd8, 0x45, 0x82, 0x09, 0x2c, 0x0a, 0xe3, 0x2a, 0xb1,
	0x73, 0xb1, 0xba, 0x94, 0xe6, 0xe6, 0x56, 0x1a, 0x35, 0x30, 0x42, 0x4d, 0x71, 0xce, 0x48, 0x4d,
	0xce, 0x4e, 0x2d, 0x12, 0x32, 0xe5, 0x12, 0x72, 0x4f, 0x2d, 0x81, 0x38, 0xca, 0xad, 0x28, 0x3f,
	0x17, 0x62, 0x36, 0xbf, 0x1e, 0xd4, 0x67, 0x50, 0x8f, 0x48, 0xf1, 0xc1, 0x04, 0xa0, 0xce, 0xb7,
	0xe4, 0x12, 0x0a, 0x2d, 0xc8, 0xc9, 0x4f, 0x4c, 0x01, 0xf3, 0x43, 0xf2, 0x21, 0xda, 0x44, 0x50,
	0x54, 0x41, 0x1d, 0x2a, 0xc5, 0x0b, 0x13, 0x05, 0x3b, 0x21, 0x89, 0x0d, 0x1c, 0x5a, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x15, 0x71, 0x16, 0xa0, 0x3d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PhotoCheckerClient is the client API for PhotoChecker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PhotoCheckerClient interface {
	GetPhotosFromAlbum(ctx context.Context, in *AlbumId, opts ...grpc.CallOption) (*Photos, error)
	UploadPhotoToAlbum(ctx context.Context, in *PhotoInAlbum, opts ...grpc.CallOption) (*Dummy, error)
}

type photoCheckerClient struct {
	cc *grpc.ClientConn
}

func NewPhotoCheckerClient(cc *grpc.ClientConn) PhotoCheckerClient {
	return &photoCheckerClient{cc}
}

func (c *photoCheckerClient) GetPhotosFromAlbum(ctx context.Context, in *AlbumId, opts ...grpc.CallOption) (*Photos, error) {
	out := new(Photos)
	err := c.cc.Invoke(ctx, "/photos.PhotoChecker/GetPhotosFromAlbum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoCheckerClient) UploadPhotoToAlbum(ctx context.Context, in *PhotoInAlbum, opts ...grpc.CallOption) (*Dummy, error) {
	out := new(Dummy)
	err := c.cc.Invoke(ctx, "/photos.PhotoChecker/UploadPhotoToAlbum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhotoCheckerServer is the server API for PhotoChecker service.
type PhotoCheckerServer interface {
	GetPhotosFromAlbum(context.Context, *AlbumId) (*Photos, error)
	UploadPhotoToAlbum(context.Context, *PhotoInAlbum) (*Dummy, error)
}

// UnimplementedPhotoCheckerServer can be embedded to have forward compatible implementations.
type UnimplementedPhotoCheckerServer struct {
}

func (*UnimplementedPhotoCheckerServer) GetPhotosFromAlbum(ctx context.Context, req *AlbumId) (*Photos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPhotosFromAlbum not implemented")
}
func (*UnimplementedPhotoCheckerServer) UploadPhotoToAlbum(ctx context.Context, req *PhotoInAlbum) (*Dummy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadPhotoToAlbum not implemented")
}

func RegisterPhotoCheckerServer(s *grpc.Server, srv PhotoCheckerServer) {
	s.RegisterService(&_PhotoChecker_serviceDesc, srv)
}

func _PhotoChecker_GetPhotosFromAlbum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlbumId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoCheckerServer).GetPhotosFromAlbum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photos.PhotoChecker/GetPhotosFromAlbum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoCheckerServer).GetPhotosFromAlbum(ctx, req.(*AlbumId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoChecker_UploadPhotoToAlbum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhotoInAlbum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoCheckerServer).UploadPhotoToAlbum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photos.PhotoChecker/UploadPhotoToAlbum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoCheckerServer).UploadPhotoToAlbum(ctx, req.(*PhotoInAlbum))
	}
	return interceptor(ctx, in, info, handler)
}

var _PhotoChecker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "photos.PhotoChecker",
	HandlerType: (*PhotoCheckerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPhotosFromAlbum",
			Handler:    _PhotoChecker_GetPhotosFromAlbum_Handler,
		},
		{
			MethodName: "UploadPhotoToAlbum",
			Handler:    _PhotoChecker_UploadPhotoToAlbum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "photos.proto",
}
