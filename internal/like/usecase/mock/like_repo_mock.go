// Code generated by MockGen. DO NOT EDIT.
// Source: ../../repository.go

// Package mock_like is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepositoryLike is a mock of RepositoryLike interface
type MockRepositoryLike struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryLikeMockRecorder
}

// MockRepositoryLikeMockRecorder is the mock recorder for MockRepositoryLike
type MockRepositoryLikeMockRecorder struct {
	mock *MockRepositoryLike
}

// NewMockRepositoryLike creates a new mock instance
func NewMockRepositoryLike(ctrl *gomock.Controller) *MockRepositoryLike {
	mock := &MockRepositoryLike{ctrl: ctrl}
	mock.recorder = &MockRepositoryLikeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepositoryLike) EXPECT() *MockRepositoryLikeMockRecorder {
	return m.recorder
}

// LikePhoto mocks base method
func (m *MockRepositoryLike) LikePhoto(arg0, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LikePhoto", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// LikePhoto indicates an expected call of LikePhoto
func (mr *MockRepositoryLikeMockRecorder) LikePhoto(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LikePhoto", reflect.TypeOf((*MockRepositoryLike)(nil).LikePhoto), arg0, arg1)
}

// DislikePhoto mocks base method
func (m *MockRepositoryLike) DislikePhoto(arg0, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DislikePhoto", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DislikePhoto indicates an expected call of DislikePhoto
func (mr *MockRepositoryLikeMockRecorder) DislikePhoto(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DislikePhoto", reflect.TypeOf((*MockRepositoryLike)(nil).DislikePhoto), arg0, arg1)
}

// LikePost mocks base method
func (m *MockRepositoryLike) LikePost(arg0, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LikePost", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// LikePost indicates an expected call of LikePost
func (mr *MockRepositoryLikeMockRecorder) LikePost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LikePost", reflect.TypeOf((*MockRepositoryLike)(nil).LikePost), arg0, arg1)
}

// DislikePost mocks base method
func (m *MockRepositoryLike) DislikePost(arg0, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DislikePost", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DislikePost indicates an expected call of DislikePost
func (mr *MockRepositoryLikeMockRecorder) DislikePost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DislikePost", reflect.TypeOf((*MockRepositoryLike)(nil).DislikePost), arg0, arg1)
}
