name: CI/CD of social-hub.ru

on:
  push:
    branches: [ fe/rk_4_tests_usecase_66 , develop ]
  pull_request:
    branches: [ fe/rk_4_tests_usecase_66 , develop ]

jobs:  
  Test:
    name: Test
    runs-on: ubuntu-latest
    env: 
      working-directory: ./internal
    steps:
    - name: Install Go
      uses: actions/setup-go@v2.0.3
      with:
        go-version: ^1.13

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get tests coverage
      run: go test -coverpkg=./... -coverprofile=cover ./...
      working-directory: ${{env.working-directory}}

    - name: Get clear coverage
      run: cat cover | fgrep -v "mock" | fgrep -v "pb.go" | fgrep -v "easyjson" > cover2
      working-directory: ${{env.working-directory}}

    - name:  Output clear coverage
      run: go tool cover -func=cover2
      working-directory: ${{env.working-directory}}    
  

  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2.0.3
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
      
    - name: Upload artifacts of microes
      uses: actions/upload-artifact@v1
      with:
        name: cmd
        path: internal/cmd/ 
    - name: Upload atrifacts of main server
      uses: actions/upload-artifact@v1
      with:
        name: main.go
        path: main.go 
    - name: Upload atrifacts of main server
      uses: actions/upload-artifact@v1
      with:
        name: main.env
        path: project.env
    - name: Upload script for starting
      uses: actions/upload-artifact@v1
      with:
        name: start.sh
        path: starter.sh

  Deploy:
    name: Deploy  
    runs-on: ubuntu-latest
    needs: ["Build"]  
    steps:
      
      - name: Download cmd file
        uses: actions/download-artifact@v1
        with:
         name: cmd
      
      - name: Download main file
        uses: actions/download-artifact@v1
        with:
         name: main.go
      
      - name: Download env file
        uses: actions/download-artifact@v1
        with:
         name: main.env
         
      - name: Download starter file
        uses: actions/download-artifact@v1
        with:
         name: start.sh

      
      

      - name: Starting deploy
        uses: "appleboy/scp-action@v0.0.10"  
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: '000000'
          source: "cmd"
          target: "/root/deploy/"
      
      - name: Starting deploy
        uses: "appleboy/scp-action@v0.0.10"  
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: '000000'
          source: "main.env"
          target: "/root/deploy/"
      
      - name: Starting deploy
        uses: "appleboy/scp-action@v0.0.10"  
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: '000000'
          source: "start.sh"
          target: "/root/deploy/"
      
      - name: Starting deploy
        uses: "appleboy/scp-action@v0.0.10"  
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: '000000'
          source: "main.go"
          target: "/root/deploy/"
      - name: chmod
        uses: appleboy/ssh-action@master
        with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           password: '000000'
           script: cd /root/deploy && ./starter.sh   

        
      

      
